<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd" default-autowire="byName" >
	  	<!-- 自动扫描的包名，多个表名用,分隔 -->
		<context:component-scan base-package="cn.com" />
			<!--配置哪些方法,什么情况下需要回滚 -->
		<tx:advice id="serviceAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 当代理的service层中的方法抛出异常的时候才回滚,必须加rollback-for参数 -->
			<tx:method name="sav*" propagation="REQUIRED" rollback-for="java.lang.Exception"
				read-only="false" />
			<tx:method name="import*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="export*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="creat*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="remove*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="submit*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" read-only="false" />
			<!-- 除了上面标识的方法,其他方法全是只读方法 -->
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="check*" read-only="true" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置哪些类的方法需要进行事务管理 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="servicePointcut"
			expression="(execution(* cn.com..*.service.impl.*.*(..)))" />
		<aop:advisor pointcut-ref="servicePointcut" advice-ref="serviceAdvice" />
	</aop:config>
	  <!-- 启用基于注解的处理器映射，添加拦截器，类级别的处理器映射 
	  <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	  -->
</beans>
